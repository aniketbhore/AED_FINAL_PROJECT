/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MainUserInterface.BloodBank;

import BusinessModel.BloodBank.BloodBank;
import BusinessModel.UserAccount.User;
import Business_Model.Ecosystem;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JANVI
 */
public class BloodBankWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BloodBankWorkAreaJPanel
     */
    private final JPanel userProcessContainer;
    private final Ecosystem ecoSystem;
    User userAccount;
    BloodBank bloodBank;
    Patient billPatient;



   public BloodBankWorkAreaJPanel(JPanel userProcessContainer, User account, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = system;
        this.userAccount = account;
        this.billPatient = null;
        BloodRequestStatusBox.addItem("Select Status");
        BloodRequestStatusBox.addItem("Blood Delivered");
        BloodRequestStatusBox.addItem("Unavailable");
        populatePatientTable();
    }
   
   private final JPanel userProcessContainer;
    private final Ecosystem ecoSystem;
    User userAccount;
    BloodBank bloodBank;
    Patient billPatient;



//   public BloodBankWorkAreaJPanel(JPanel userProcessContainer, User account, Ecosystem system) {
//        initComponents();
//        this.userProcessContainer = userProcessContainer;
//        this.ecoSystem = system;
//        this.userAccount = account;
//        this.billPatient = null;
//        BloodRequestStatusBox.addItem("Select Status");
//        BloodRequestStatusBox.addItem("Blood Delivered");
//        BloodRequestStatusBox.addItem("Unavailable");
//        populatePatientTable();
//    }

private void populateBillTable() {

private void populateBillTable() {
        DefaultTableModel model = (DefaultTableModel) BillTable.getModel();



       model.setRowCount(0);



       for (PatientBills b : billPatient.getpBills()) {
            
                Object[] row = new Object[4];
                row[0] = b.getName();
                row[1] = b.getOrgType();
                row[2] = b.getAmount();
                row[3] = b;
                if(b.getOrgType().toLowerCase().equals("blood bank"))
                {
                    model.addRow(row);
                }
        }
    }



   private void populatePatientTable() {
        DefaultTableModel model = (DefaultTableModel) ManagePatientTable.getModel();



       model.setRowCount(0);



       for (Patient patient : ecoSystem.getPatientDirectory().getPatientList()) {
            if (patient.getpBloodBankStatus().equals("Requested") || patient.getpBloodBankStatus().equals("Unavailable")) {
                Object[] row = new Object[10];
                row[0] = patient.getpFirstName();
                row[1] = patient.getpHealthInsuranceID();
                row[2] = patient.getpUserName();
                row[3] = patient.getpLastName();
                row[4] = patient.getpAge();
                row[5] = patient.getpInsuranceStatus();
                row[6] = patient.getpEmailAddress();
                row[7] = patient.getpBloodBankStatus();
                row[8] = patient.getpBloodBagQuantity();
                row[9] = patient;
                model.addRow(row);
            }
        }
    }



        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ManagePatientTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BillTable = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnProcessRequest = new javax.swing.JButton();
        btnTreatedPatientList = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 153, 153));
        setPreferredSize(new java.awt.Dimension(1400, 800));

        ManagePatientTable.setBackground(new java.awt.Color(204, 0, 51));
        ManagePatientTable.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createCompoundBorder(), null));
        ManagePatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Username", "ID", "First Name", "Last Name", "Age", "Address", "Email", "Status", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(ManagePatientTable);

        BillTable.setBackground(new java.awt.Color(204, 0, 51));
        BillTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Name", "Department", "Amount"
            }
        ));
        jScrollPane2.setViewportView(BillTable);

        jComboBox1.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Book Issued", "Book Unavailable" }));

        btnProcessRequest.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        btnProcessRequest.setText("Request");
        btnProcessRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessRequestActionPerformed(evt);
            }
        });

        btnTreatedPatientList.setFont(new java.awt.Font("Bookman Old Style", 0, 14)); // NOI18N
        btnTreatedPatientList.setText("Issue History");
        btnTreatedPatientList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTreatedPatientListActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 0, 204));
        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 36)); // NOI18N
        jLabel1.setText("Snell Library");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(422, 422, 422)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(270, 270, 270)
                        .addComponent(btnProcessRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(658, 658, 658)
                        .addComponent(jLabel1)))
                .addContainerGap(403, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1236, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnTreatedPatientList, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(609, 609, 609))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcessRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1))
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btnTreatedPatientList)
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessRequestActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = ManagePatientTable.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Pls select a row!!", "Warning", JOptionPane.WARNING_MESSAGE);
        } 
        else {

            Patient patient = (Patient) ManagePatientTable.getValueAt(selectedRowIndex, 9);

            for (Patient p : ecoSystem.getPatientDirectory().getPatientList()) {
                if (patient.getpUserName().equals(p.getpUserName())) {
                    if (!((String) BloodRequestStatusBox.getSelectedItem()).equals("Select Status")) {
                        p.setpBloodBankStatus((String) BloodRequestStatusBox.getSelectedItem());
                        billPatient = p;
                        if (p.getpBloodBankStatus().equals("Blood Delivered")) {
                            for (int bloodBag = 0; bloodBag < Integer.parseInt(billPatient.getpBloodBagQuantity()); bloodBag++) {
                                ecoSystem.getPatientDirectory().AddBill(billPatient, "Blood Charges", "Blood Bank", "");
                                ecoSystem.getBloodBank().AddTreatedPatientList(billPatient);
                            }
                        }
                        break;
                    }
                }
            }

            populatePatientTable();
            populateBillTable();

        }
    }//GEN-LAST:event_btnProcessRequestActionPerformed

    private void btnTreatedPatientListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTreatedPatientListActionPerformed
        // TODO add your handling code here:
        TreatedPatientJPanel treatedPatientJPanel = new TreatedPatientJPanel(userProcessContainer,userAccount,ecoSystem);
        userProcessContainer.add("Display Treated Patient", treatedPatientJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnTreatedPatientListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BillTable;
    private javax.swing.JTable ManagePatientTable;
    private javax.swing.JButton btnProcessRequest;
    private javax.swing.JButton btnTreatedPatientList;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
