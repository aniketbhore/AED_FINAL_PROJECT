/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MainUserInterface.Teacher;

import BusinessModel.Teacher.Teacher;
import Business_Model.Ecosystem;
import BusinessModel.Student.Student;
import BusinessModel.UserAccount.User;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import MainUserInterface.TeacherAdministration.DisplayStudentInfoJPanel;
import MainUserInterface.Lab.LabWorkAreaJPanel;
import MainUserInterface.Inventory.InventoryWorkAreaJPanel;
/**
 *
 * @author nehashende
 */
public class TeacherWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form TeacherWorkAreaJPanel
     */
    private final JPanel userProcessContainer;
    private final Ecosystem ecoSystem;
    User userAccount;
    
    public TeacherWorkAreaJPanel(JPanel userProcessContainer, User account, Ecosystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = system;
        this.userAccount = account;
        populatePatientTable();
        populatePatientTable1();
    }
    private void populatePatientTable() {
        try{
        DefaultTableModel model = (DefaultTableModel) PatientTable.getModel();
        model.setRowCount(0);
        for (Teacher teacher : ecoSystem.getTeacherDirectory().getTeachers()) {
            if (teacher.gettUserName().equals(userAccount.getUsername())) {
                for (Student stud : teacher.getTreatedPatientList()) 
                {
                    Object[] row = new Object[8];
                    row[0] = stud.getsFirstName();
                    row[1] = stud.getsLastName();
                    row[2] = stud.getsStudentType();
                    row[3] = stud.getsBloodType();
                    row[4] = stud.getsAge();
                    row[5] = stud.getsGender();
                    row[6] = stud.getsStatus();
                    row[7] = stud;
                    if(!stud.getsStatus().equals("Graduated")){
                    model.addRow(row);}
                }
            }
        }
        }
        catch(Exception e){
            e.printStackTrace();
            System.out.println("error message ---"+e.getMessage());
            System.out.println("no students yet");
        }
    }
    private void populatePatientTable1() {
        try{
        DefaultTableModel model = (DefaultTableModel) PatientTable1.getModel();

        model.setRowCount(0);

        for (Teacher teacher : ecoSystem.getTeacherDirectory().getTeachers()) {
            if (teacher.gettUserName().equals(userAccount.getUsername())) {
                for (Student s : teacher.getTreatedPatientList()) 
                {
                    Object[] row = new Object[8];
                    row[0] = s.getsFirstName();
                    row[1] = s.getsLastName();
                    row[2] = s.getsStudentType();
                    row[3] = s.getsBloodType();
                    row[4] = s.getsAge();
                    row[5] = s.getsGender();
                    row[6] = s.getsStatus();
                    row[7] = s;
                    if(s.getsStatus().equals("Graduated")){
                    model.addRow(row);}
                }
            }
        }
        }
        catch(Exception e){
            System.out.println("no students yet");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageCustomers = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        PatientTable = new javax.swing.JTable();
        btnVisitPatient = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PatientTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(0, 153, 204));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblManageCustomers.setBackground(new java.awt.Color(0, 0, 0));
        lblManageCustomers.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        lblManageCustomers.setForeground(new java.awt.Color(255, 255, 255));
        lblManageCustomers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageCustomers.setText(" WorkArea");
        add(lblManageCustomers, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 20, 1238, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1404, 10));

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Assigned");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 230, -1));

        PatientTable.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        PatientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Student Type", "Blood Type", "Age", "Gender", "Email", "ob"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(PatientTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 1050, 170));

        btnVisitPatient.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        btnVisitPatient.setText("Details");
        btnVisitPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisitPatientActionPerformed(evt);
            }
        });
        add(btnVisitPatient, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 360, 120, 44));

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Previous");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 440, 310, 34));

        PatientTable1.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        PatientTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Student Type", "Blood Type", "Age", "Gender", "Email", "ob"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(PatientTable1);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 490, 1040, 191));
    }// </editor-fold>//GEN-END:initComponents

    private void btnVisitPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisitPatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = PatientTable.getSelectedRow();
        if (selectedRowIndex < 0)
        {
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            Student stud = (Student) PatientTable.getValueAt(selectedRowIndex, 7);
            if(stud.getsStatus().equals("Teacher Teaching")){
                JOptionPane.showMessageDialog(null, "Student is in lecture.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else{
                stud.setsStatus("Teacher in lecture");
                TeacherVisitJPanel doctorVisit = new TeacherVisitJPanel(userProcessContainer, userAccount, ecoSystem, stud);
                userProcessContainer.add("Attend Lecture", doctorVisit);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
        }


    }//GEN-LAST:event_btnVisitPatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PatientTable;
    private javax.swing.JTable PatientTable1;
    private javax.swing.JButton btnVisitPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblManageCustomers;
    // End of variables declaration//GEN-END:variables
}
