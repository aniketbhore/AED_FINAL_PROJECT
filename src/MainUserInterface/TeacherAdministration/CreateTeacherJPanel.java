/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MainUserInterface.TeacherAdministration;

import BusinessModel.Teacher.Teacher;
import BusinessModel.Roles.Teacher_role;
import BusinessModel.UserAccount.User;
import Business_Model.Ecosystem;
import java.awt.CardLayout;
import java.awt.Image;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import MainUserInterface.ReceptionRole.ReceptionWorkAreaJPanel;
/**
 *
 * @author nehashende
 */
public class CreateTeacherJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateTeacherJPanel
     */
    private final JPanel userProcessContainer;
    private final Ecosystem ecoSystem;
    User userAccount;
    private Teacher photoTeacher;
    
    public CreateTeacherJPanel(JPanel userProcessContainer, User user, Ecosystem system) {
        initComponents();
        this.userAccount = user;
        this.userProcessContainer = userProcessContainer;
        this.ecoSystem = system;
        this.photoTeacher = new Teacher();

        GComboBox.removeAllItems();
        GComboBox.addItem("Male");
        GComboBox.addItem("Female");
        GComboBox.addItem("Other");

        populateNetworkTable();
    }

    private void populateNetworkTable() {
        // DefaultTableModel model = (DefaultTableModel) ManageCustomersTable.getModel();

        //model.setRowCount(0);
        for (User user : ecoSystem.getUserAccountDirectory().getUserAccountList()) {

            if ("Business.Role.DoctorRole".equals(user.getRole().getClass().getName())) {
                Object[] row = new Object[3];
                row[1] = user.getUsername();
                row[2] = user.getPassword();
                // model.addRow(row);
            }

        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAddTeacher = new javax.swing.JLabel();
        UserNameLbl = new javax.swing.JLabel();
        UsernameTxt = new javax.swing.JTextField();
        FirstNameLbl = new javax.swing.JLabel();
        FirstNameTxt = new javax.swing.JTextField();
        GenderLbl = new javax.swing.JLabel();
        GComboBox = new javax.swing.JComboBox<>();
        PhoneNoLbl = new javax.swing.JLabel();
        PhoneNumberTxt = new javax.swing.JTextField();
        AddressLbl = new javax.swing.JLabel();
        AddressTxt = new javax.swing.JTextField();
        PasswordLbl = new javax.swing.JLabel();
        PasswordTxt = new javax.swing.JTextField();
        lLastNameLbl = new javax.swing.JLabel();
        LastNameTxt = new javax.swing.JTextField();
        DateOfBirthLbl = new javax.swing.JLabel();
        EmailLbl = new javax.swing.JLabel();
        EmailTxt = new javax.swing.JTextField();
        lblPhotoImage = new javax.swing.JLabel();
        qualificationImageLbl = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        DoctorWorkIDLbl = new javax.swing.JLabel();
        txtDoctorID = new javax.swing.JTextField();
        lblExperience = new javax.swing.JLabel();
        ExperienceTxt = new javax.swing.JTextField();
        lblSpeciality = new javax.swing.JLabel();
        SpecialistTxt = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblErrorSpecialist = new javax.swing.JLabel();
        lblErrorWorkExperience = new javax.swing.JLabel();
        ErrorPhoneLbl = new javax.swing.JLabel();
        ErrorEmailLbl = new javax.swing.JLabel();
        lblErrorDoctorWorkID = new javax.swing.JLabel();
        ErrorPasswordLbl = new javax.swing.JLabel();
        ErrorUserNameLbl = new javax.swing.JLabel();
        lblErrorAddress = new javax.swing.JLabel();
        ErrorPhoneLbl1 = new javax.swing.JLabel();
        txtDOB = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 153, 153));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAddTeacher.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 36)); // NOI18N
        lblAddTeacher.setForeground(new java.awt.Color(255, 255, 255));
        lblAddTeacher.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddTeacher.setText("ADD A TEACHER");
        add(lblAddTeacher, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 30, 1380, -1));

        UserNameLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        UserNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        UserNameLbl.setText("User Name");
        add(UserNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 130, -1, -1));

        UsernameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTxtActionPerformed(evt);
            }
        });
        add(UsernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 120, 170, 30));

        FirstNameLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        FirstNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        FirstNameLbl.setText("First Name");
        add(FirstNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, -1, -1));

        FirstNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameTxtActionPerformed(evt);
            }
        });
        add(FirstNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 170, 30));

        GenderLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        GenderLbl.setForeground(new java.awt.Color(255, 255, 255));
        GenderLbl.setText("Gender");
        add(GenderLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 260, -1, -1));

        GComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(GComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, 170, 30));

        PhoneNoLbl.setBackground(new java.awt.Color(255, 255, 255));
        PhoneNoLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        PhoneNoLbl.setForeground(new java.awt.Color(255, 255, 255));
        PhoneNoLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PhoneNoLbl.setText("Phone Number");
        add(PhoneNoLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 310, -1, -1));

        PhoneNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneNumberTxtActionPerformed(evt);
            }
        });
        PhoneNumberTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PhoneNumberTxtKeyReleased(evt);
            }
        });
        add(PhoneNumberTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 300, 170, 30));

        AddressLbl.setBackground(new java.awt.Color(255, 255, 255));
        AddressLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        AddressLbl.setForeground(new java.awt.Color(255, 255, 255));
        AddressLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AddressLbl.setText("Address");
        add(AddressLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 70, 30));

        AddressTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressTxtActionPerformed(evt);
            }
        });
        AddressTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                AddressTxtKeyReleased(evt);
            }
        });
        add(AddressTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 170, 70));

        PasswordLbl.setBackground(new java.awt.Color(0, 0, 0));
        PasswordLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        PasswordLbl.setForeground(new java.awt.Color(255, 255, 255));
        PasswordLbl.setText("Password");
        add(PasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 130, 90, -1));

        PasswordTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTxtActionPerformed(evt);
            }
        });
        PasswordTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PasswordTxtKeyReleased(evt);
            }
        });
        add(PasswordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 120, 170, 30));

        lLastNameLbl.setBackground(new java.awt.Color(0, 0, 0));
        lLastNameLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        lLastNameLbl.setForeground(new java.awt.Color(255, 255, 255));
        lLastNameLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lLastNameLbl.setText("Last Name");
        add(lLastNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 200, 110, -1));

        LastNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameTxtActionPerformed(evt);
            }
        });
        LastNameTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                LastNameTxtKeyReleased(evt);
            }
        });
        add(LastNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 190, 170, 30));

        DateOfBirthLbl.setBackground(new java.awt.Color(255, 255, 255));
        DateOfBirthLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        DateOfBirthLbl.setForeground(new java.awt.Color(255, 255, 255));
        DateOfBirthLbl.setText("Date of Birth");
        add(DateOfBirthLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 270, 100, -1));

        EmailLbl.setBackground(new java.awt.Color(255, 255, 255));
        EmailLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        EmailLbl.setForeground(new java.awt.Color(255, 255, 255));
        EmailLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmailLbl.setText("Email");
        add(EmailLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 340, 60, -1));

        EmailTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTxtActionPerformed(evt);
            }
        });
        EmailTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmailTxtKeyReleased(evt);
            }
        });
        add(EmailTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 330, 170, 30));
        add(lblPhotoImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 90, 180, 200));

        qualificationImageLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 14)); // NOI18N
        qualificationImageLbl.setText("Upload Image");
        qualificationImageLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qualificationImageLblActionPerformed(evt);
            }
        });
        add(qualificationImageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 310, -1, -1));

        jLabel4.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Qualification  Information ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 460, -1, -1));
        add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 490, 1302, 10));

        DoctorWorkIDLbl.setBackground(new java.awt.Color(255, 255, 255));
        DoctorWorkIDLbl.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        DoctorWorkIDLbl.setForeground(new java.awt.Color(255, 255, 255));
        DoctorWorkIDLbl.setText("Teacher ID");
        add(DoctorWorkIDLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 520, -1, -1));

        txtDoctorID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorIDActionPerformed(evt);
            }
        });
        txtDoctorID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDoctorIDKeyReleased(evt);
            }
        });
        add(txtDoctorID, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 520, 170, 30));

        lblExperience.setBackground(new java.awt.Color(255, 255, 255));
        lblExperience.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        lblExperience.setForeground(new java.awt.Color(255, 255, 255));
        lblExperience.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExperience.setText("Experience");
        add(lblExperience, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 530, 127, -1));

        ExperienceTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExperienceTxtActionPerformed(evt);
            }
        });
        ExperienceTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ExperienceTxtKeyReleased(evt);
            }
        });
        add(ExperienceTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 520, 170, 30));

        lblSpeciality.setBackground(new java.awt.Color(255, 255, 255));
        lblSpeciality.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 18)); // NOI18N
        lblSpeciality.setForeground(new java.awt.Color(255, 255, 255));
        lblSpeciality.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSpeciality.setText("Subject");
        add(lblSpeciality, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 590, 90, -1));

        SpecialistTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SpecialistTxtActionPerformed(evt);
            }
        });
        SpecialistTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SpecialistTxtKeyReleased(evt);
            }
        });
        add(SpecialistTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 590, 170, 30));

        btnSubmit.setFont(new java.awt.Font("Microsoft JhengHei", 1, 18)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 640, 140, 40));

        lblErrorSpecialist.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        lblErrorSpecialist.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorSpecialist.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorSpecialistKeyReleased(evt);
            }
        });
        add(lblErrorSpecialist, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 620, 170, 20));

        lblErrorWorkExperience.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        lblErrorWorkExperience.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorWorkExperience.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorWorkExperienceKeyReleased(evt);
            }
        });
        add(lblErrorWorkExperience, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 550, 170, 30));

        ErrorPhoneLbl.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        ErrorPhoneLbl.setForeground(new java.awt.Color(255, 51, 51));
        ErrorPhoneLbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ErrorPhoneLblKeyReleased(evt);
            }
        });
        add(ErrorPhoneLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 320, 170, 20));

        ErrorEmailLbl.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        ErrorEmailLbl.setForeground(new java.awt.Color(255, 51, 51));
        ErrorEmailLbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ErrorEmailLblKeyReleased(evt);
            }
        });
        add(ErrorEmailLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 360, 170, 26));
        add(lblErrorDoctorWorkID, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 550, 170, 20));

        ErrorPasswordLbl.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        ErrorPasswordLbl.setForeground(new java.awt.Color(255, 51, 51));
        ErrorPasswordLbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ErrorPasswordLblKeyReleased(evt);
            }
        });
        add(ErrorPasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 150, 200, 26));

        ErrorUserNameLbl.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        ErrorUserNameLbl.setForeground(new java.awt.Color(255, 51, 51));
        ErrorUserNameLbl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ErrorUserNameLblKeyReleased(evt);
            }
        });
        add(ErrorUserNameLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, 200, 26));

        lblErrorAddress.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        lblErrorAddress.setForeground(new java.awt.Color(255, 51, 51));
        lblErrorAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lblErrorAddressKeyReleased(evt);
            }
        });
        add(lblErrorAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 400, 210, 30));

        ErrorPhoneLbl1.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        ErrorPhoneLbl1.setForeground(new java.awt.Color(255, 51, 51));
        ErrorPhoneLbl1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ErrorPhoneLbl1KeyReleased(evt);
            }
        });
        add(ErrorPhoneLbl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 330, 170, 20));

        txtDOB.setBackground(new java.awt.Color(204, 204, 204));
        txtDOB.setDateFormatString("MM-dd-yyyy");
        txtDOB.setMaxSelectableDate(new Date());
        add(txtDOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 260, 180, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void FirstNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstNameTxtActionPerformed

    private void PhoneNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumberTxtActionPerformed

    private void PhoneNumberTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PhoneNumberTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9 +()-]{10,18}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(PhoneNumberTxt.getText());
        if (!match.matches()) {
            ErrorPhoneLbl.setText("Wrong Input");
        } else {
            ErrorPhoneLbl.setText(null);
        }
    }//GEN-LAST:event_PhoneNumberTxtKeyReleased

    private void AddressTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressTxtActionPerformed

    private void AddressTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AddressTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(AddressTxt.getText());
        if (!match.matches()) {
            lblErrorAddress.setText("Wrong Input");
        } else {
            lblErrorAddress.setText(null);
        }
    }//GEN-LAST:event_AddressTxtKeyReleased

    private void PasswordTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordTxtActionPerformed

    private void PasswordTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PasswordTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z '/:]+$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(PasswordTxt.getText());
        if (!match.matches()) {
            ErrorUserNameLbl.setText("Wrong Input");
        } else {
            ErrorUserNameLbl.setText(null);
        }
    }//GEN-LAST:event_PasswordTxtKeyReleased

    private void LastNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastNameTxtActionPerformed

    private void LastNameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LastNameTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z '/:]+$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(LastNameTxt.getText());
        if (!match.matches()) {
            //lblErrorLname.setText("Wrong Input");
        } else {
            //lblErrorLname.setText(null);
        }
    }//GEN-LAST:event_LastNameTxtKeyReleased

    private void EmailTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTxtActionPerformed

    private void EmailTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z0-9]{0,30}[@][a-zA-Z0-9]{0,10}[.][a-zA-Z]{0,5}$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(EmailTxt.getText());
        if (!match.matches()) {
            ErrorEmailLbl.setText("Wrong Input");
        } else {
            ErrorEmailLbl.setText(null);
        }
    }//GEN-LAST:event_EmailTxtKeyReleased

    private void qualificationImageLblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qualificationImageLblActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
       JFileChooser browseImageFile = new JFileChooser();
        //Filter image extensions
        FileNameExtensionFilter fnef = new FileNameExtensionFilter("IMAGES", "png", "jpg", "jpeg");
        browseImageFile.addChoosableFileFilter(fnef);
        int showOpenDialogue = browseImageFile.showOpenDialog(null);

        if (showOpenDialogue == JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImageFile.getSelectedFile();
            String selectedImagePath = selectedImageFile.getAbsolutePath();
            JOptionPane.showMessageDialog(null, selectedImagePath);
            //Display image on jlable
            photoTeacher.settImageUrl(selectedImagePath);

            ImageIcon ii = new ImageIcon(selectedImagePath);
            //Resize image to fit jlabel
            Image image = ii.getImage().getScaledInstance(lblPhotoImage.getWidth(), lblPhotoImage.getHeight(), Image.SCALE_SMOOTH);
            lblPhotoImage.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_qualificationImageLblActionPerformed

    private void txtDoctorIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorIDActionPerformed

    private void txtDoctorIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDoctorIDKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z0-9 '/:]+$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(txtDoctorID.getText());
        if (!match.matches()) {
            lblErrorDoctorWorkID.setText("Wrong Input");
        } else {
            lblErrorDoctorWorkID.setText(null);
        }
    }//GEN-LAST:event_txtDoctorIDKeyReleased

    private void ExperienceTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExperienceTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ExperienceTxtActionPerformed

    private void ExperienceTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ExperienceTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]+$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(ExperienceTxt.getText());
        if (!match.matches()) {
            lblErrorWorkExperience.setText("Wrong Input");
        } else {
            lblErrorWorkExperience.setText(null);
        }
    }//GEN-LAST:event_ExperienceTxtKeyReleased

    private void SpecialistTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SpecialistTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SpecialistTxtActionPerformed

    private void SpecialistTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SpecialistTxtKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z '/:]+$";
        Pattern pattern = Pattern.compile(PATTERN);
        Matcher match = pattern.matcher(SpecialistTxt.getText());
        if (!match.matches()) {
            lblErrorSpecialist.setText("Wrong Input");
        } else {
            lblErrorSpecialist.setText(null);
        }
    }//GEN-LAST:event_SpecialistTxtKeyReleased

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        if (ecoSystem.getUserAccountDirectory().checkIfUsernameIsUnique(PasswordTxt.getText())
                && (lblErrorAddress.getText() == null || lblErrorAddress.getText().equals(""))
                && (ErrorEmailLbl.getText() == null || ErrorEmailLbl.getText().equals(""))
                && (ErrorPasswordLbl.getText() == null || ErrorPasswordLbl.getText().equals(""))
                && (ErrorPhoneLbl.getText() == null || ErrorPhoneLbl.getText().equals(""))
                && (ErrorUserNameLbl.getText() == null || ErrorUserNameLbl.getText().equals(""))     
                ) {
            Teacher teacher = new Teacher(PasswordTxt.getText());
            teacher.settFirstName(FirstNameTxt.getText());
                    
            teacher.settLastName(LastNameTxt.getText());
                    
            teacher.settAge((CalculateAge(txtDOB.getDate(), java.util.Calendar.getInstance().getTime())));
                    
            teacher.settGender((String) GComboBox.getSelectedItem());
                    
            teacher.settWorkID(txtDoctorID.getText());
                    
            teacher.settAddress(AddressTxt.getText());
                    
            teacher.settPhoneNumber(PhoneNumberTxt.getText());
                   
            teacher.settEmail(EmailTxt.getText());
                    
            teacher.settSpecialization(SpecialistTxt.getText());
                    
            teacher.settExperience(ExperienceTxt.getText());
                   
            teacher.settUserName(PasswordTxt.getText());
            photoTeacher = teacher;
            ecoSystem.getUserAccountDirectory().createUser(PasswordTxt.getText(), UsernameTxt.getText(), null, new Teacher_role());
            ecoSystem.getTeacherDirectory().createTeacher(teacher);
               
            JOptionPane.showMessageDialog(null, "Teacher added.");
            
            TeacherAdminWorkArea doctorAdminWorkArea = new TeacherAdminWorkArea(userProcessContainer, userAccount, ecoSystem);
            userProcessContainer.add("Teacher Admin Work Area", doctorAdminWorkArea);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            
        } else 
        {
            JOptionPane.showMessageDialog(null, "Please Fill Correct Details");
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void lblErrorSpecialistKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorSpecialistKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorSpecialistKeyReleased

    private void lblErrorWorkExperienceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorWorkExperienceKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorWorkExperienceKeyReleased

    private void ErrorPhoneLblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ErrorPhoneLblKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ErrorPhoneLblKeyReleased

    private void ErrorEmailLblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ErrorEmailLblKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ErrorEmailLblKeyReleased

    private void ErrorPasswordLblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ErrorPasswordLblKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ErrorPasswordLblKeyReleased

    private void ErrorUserNameLblKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ErrorUserNameLblKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ErrorUserNameLblKeyReleased

    private void UsernameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameTxtActionPerformed

    private void lblErrorAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblErrorAddressKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lblErrorAddressKeyReleased

    private void ErrorPhoneLbl1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ErrorPhoneLbl1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_ErrorPhoneLbl1KeyReleased
public int CalculateAge(Date birthDate, Date currentDate) {
        // validate inputs ...                                                                               
        DateFormat formatter = new SimpleDateFormat("yyyyMMdd");
        int d1 = Integer.parseInt(formatter.format(birthDate));
        int d2 = Integer.parseInt(formatter.format(currentDate));
        int age = (d2 - d1) / 10000;
        return age;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AddressLbl;
    private javax.swing.JTextField AddressTxt;
    private javax.swing.JLabel DateOfBirthLbl;
    private javax.swing.JLabel DoctorWorkIDLbl;
    private javax.swing.JLabel EmailLbl;
    private javax.swing.JTextField EmailTxt;
    private javax.swing.JLabel ErrorEmailLbl;
    private javax.swing.JLabel ErrorPasswordLbl;
    private javax.swing.JLabel ErrorPhoneLbl;
    private javax.swing.JLabel ErrorPhoneLbl1;
    private javax.swing.JLabel ErrorUserNameLbl;
    private javax.swing.JTextField ExperienceTxt;
    private javax.swing.JLabel FirstNameLbl;
    private javax.swing.JTextField FirstNameTxt;
    private javax.swing.JComboBox<String> GComboBox;
    private javax.swing.JLabel GenderLbl;
    private javax.swing.JTextField LastNameTxt;
    private javax.swing.JLabel PasswordLbl;
    private javax.swing.JTextField PasswordTxt;
    private javax.swing.JLabel PhoneNoLbl;
    private javax.swing.JTextField PhoneNumberTxt;
    private javax.swing.JTextField SpecialistTxt;
    private javax.swing.JLabel UserNameLbl;
    private javax.swing.JTextField UsernameTxt;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lLastNameLbl;
    private javax.swing.JLabel lblAddTeacher;
    private javax.swing.JLabel lblErrorAddress;
    private javax.swing.JLabel lblErrorDoctorWorkID;
    private javax.swing.JLabel lblErrorSpecialist;
    private javax.swing.JLabel lblErrorWorkExperience;
    private javax.swing.JLabel lblExperience;
    private javax.swing.JLabel lblPhotoImage;
    private javax.swing.JLabel lblSpeciality;
    private javax.swing.JButton qualificationImageLbl;
    private com.toedter.calendar.JDateChooser txtDOB;
    private javax.swing.JTextField txtDoctorID;
    // End of variables declaration//GEN-END:variables
}
